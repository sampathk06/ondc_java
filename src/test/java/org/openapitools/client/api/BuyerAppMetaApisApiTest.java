/*
 * ONDC Protocol Core API
 * ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CancellationReasonsPostRequest;
import org.openapitools.client.model.FeedbackCategoriesPostRequest;
import org.openapitools.client.model.FeedbackFormPostRequest;
import org.openapitools.client.model.RatingCategoriesPostRequest;
import org.openapitools.client.model.ReturnReasonsPostRequest;
import org.openapitools.client.model.SearchPost200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BuyerAppMetaApisApi
 */
@Disabled
public class BuyerAppMetaApisApiTest {

    private final BuyerAppMetaApisApi api = new BuyerAppMetaApisApi();

    /**
     * Get cancellation reasons from the Seller App
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancellationReasonsPostTest() throws ApiException {
        CancellationReasonsPostRequest cancellationReasonsPostRequest = null;
        SearchPost200Response response = api.cancellationReasonsPost(cancellationReasonsPostRequest);
        // TODO: test validations
    }

    /**
     * Get a list of categories for which feedback can be given by the Buyer App
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void feedbackCategoriesPostTest() throws ApiException {
        FeedbackCategoriesPostRequest feedbackCategoriesPostRequest = null;
        SearchPost200Response response = api.feedbackCategoriesPost(feedbackCategoriesPostRequest);
        // TODO: test validations
    }

    /**
     * Get a feedback form from the Seller App
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void feedbackFormPostTest() throws ApiException {
        FeedbackFormPostRequest feedbackFormPostRequest = null;
        SearchPost200Response response = api.feedbackFormPost(feedbackFormPostRequest);
        // TODO: test validations
    }

    /**
     * Get a list of categories that can be rated by the Buyer App
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ratingCategoriesPostTest() throws ApiException {
        RatingCategoriesPostRequest ratingCategoriesPostRequest = null;
        SearchPost200Response response = api.ratingCategoriesPost(ratingCategoriesPostRequest);
        // TODO: test validations
    }

    /**
     * Get return reasons from the Seller App
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void returnReasonsPostTest() throws ApiException {
        ReturnReasonsPostRequest returnReasonsPostRequest = null;
        SearchPost200Response response = api.returnReasonsPost(returnReasonsPostRequest);
        // TODO: test validations
    }

}
