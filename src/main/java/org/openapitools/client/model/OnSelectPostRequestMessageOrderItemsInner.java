/*
 * ONDC Protocol Core API
 * ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.Descriptor;
import org.openapitools.client.model.Id;
import org.openapitools.client.model.ItemQuantity;
import org.openapitools.client.model.Price;
import org.openapitools.client.model.Time;
import org.openapitools.client.model.Value;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OnSelectPostRequestMessageOrderItemsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-21T15:31:26.696+05:30[Asia/Kolkata]")
public class OnSelectPostRequestMessageOrderItemsInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PARENT_ITEM_ID = "parent_item_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ITEM_ID)
  private Id parentItemId = null;

  public static final String SERIALIZED_NAME_DESCRIPTOR = "descriptor";
  @SerializedName(SERIALIZED_NAME_DESCRIPTOR)
  private Descriptor descriptor;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Price price;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private Id categoryId = null;

  public static final String SERIALIZED_NAME_FULFILLMENT_ID = "fulfillment_id";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_ID)
  private Id fulfillmentId = null;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private Value rating = null;

  public static final String SERIALIZED_NAME_LOCATION_ID = "location_id";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private Id locationId = null;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private Time time;

  public static final String SERIALIZED_NAME_RATEABLE = "rateable";
  @SerializedName(SERIALIZED_NAME_RATEABLE)
  private Boolean rateable;

  public static final String SERIALIZED_NAME_MATCHED = "matched";
  @SerializedName(SERIALIZED_NAME_MATCHED)
  private Boolean matched;

  public static final String SERIALIZED_NAME_RELATED = "related";
  @SerializedName(SERIALIZED_NAME_RELATED)
  private Boolean related;

  public static final String SERIALIZED_NAME_RECOMMENDED = "recommended";
  @SerializedName(SERIALIZED_NAME_RECOMMENDED)
  private Boolean recommended;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = null;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private ItemQuantity quantity;

  public OnSelectPostRequestMessageOrderItemsInner() {
  }

  public OnSelectPostRequestMessageOrderItemsInner id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * This is the most unique identifier of a service item. An example of an Item ID could be the SKU of a product.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the most unique identifier of a service item. An example of an Item ID could be the SKU of a product.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public OnSelectPostRequestMessageOrderItemsInner parentItemId(Id parentItemId) {
    
    this.parentItemId = parentItemId;
    return this;
  }

   /**
   * Get parentItemId
   * @return parentItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Id getParentItemId() {
    return parentItemId;
  }


  public void setParentItemId(Id parentItemId) {
    this.parentItemId = parentItemId;
  }


  public OnSelectPostRequestMessageOrderItemsInner descriptor(Descriptor descriptor) {
    
    this.descriptor = descriptor;
    return this;
  }

   /**
   * Get descriptor
   * @return descriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Descriptor getDescriptor() {
    return descriptor;
  }


  public void setDescriptor(Descriptor descriptor) {
    this.descriptor = descriptor;
  }


  public OnSelectPostRequestMessageOrderItemsInner price(Price price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Price getPrice() {
    return price;
  }


  public void setPrice(Price price) {
    this.price = price;
  }


  public OnSelectPostRequestMessageOrderItemsInner categoryId(Id categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Get categoryId
   * @return categoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Id getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(Id categoryId) {
    this.categoryId = categoryId;
  }


  public OnSelectPostRequestMessageOrderItemsInner fulfillmentId(Id fulfillmentId) {
    
    this.fulfillmentId = fulfillmentId;
    return this;
  }

   /**
   * Get fulfillmentId
   * @return fulfillmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Id getFulfillmentId() {
    return fulfillmentId;
  }


  public void setFulfillmentId(Id fulfillmentId) {
    this.fulfillmentId = fulfillmentId;
  }


  public OnSelectPostRequestMessageOrderItemsInner rating(Value rating) {
    
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Value getRating() {
    return rating;
  }


  public void setRating(Value rating) {
    this.rating = rating;
  }


  public OnSelectPostRequestMessageOrderItemsInner locationId(Id locationId) {
    
    this.locationId = locationId;
    return this;
  }

   /**
   * Get locationId
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Id getLocationId() {
    return locationId;
  }


  public void setLocationId(Id locationId) {
    this.locationId = locationId;
  }


  public OnSelectPostRequestMessageOrderItemsInner time(Time time) {
    
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Time getTime() {
    return time;
  }


  public void setTime(Time time) {
    this.time = time;
  }


  public OnSelectPostRequestMessageOrderItemsInner rateable(Boolean rateable) {
    
    this.rateable = rateable;
    return this;
  }

   /**
   * If the entity can be rated or not
   * @return rateable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the entity can be rated or not")

  public Boolean getRateable() {
    return rateable;
  }


  public void setRateable(Boolean rateable) {
    this.rateable = rateable;
  }


  public OnSelectPostRequestMessageOrderItemsInner matched(Boolean matched) {
    
    this.matched = matched;
    return this;
  }

   /**
   * Get matched
   * @return matched
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMatched() {
    return matched;
  }


  public void setMatched(Boolean matched) {
    this.matched = matched;
  }


  public OnSelectPostRequestMessageOrderItemsInner related(Boolean related) {
    
    this.related = related;
    return this;
  }

   /**
   * Get related
   * @return related
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRelated() {
    return related;
  }


  public void setRelated(Boolean related) {
    this.related = related;
  }


  public OnSelectPostRequestMessageOrderItemsInner recommended(Boolean recommended) {
    
    this.recommended = recommended;
    return this;
  }

   /**
   * Get recommended
   * @return recommended
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRecommended() {
    return recommended;
  }


  public void setRecommended(Boolean recommended) {
    this.recommended = recommended;
  }


  public OnSelectPostRequestMessageOrderItemsInner tags(Map<String, String> tags) {
    
    this.tags = tags;
    return this;
  }

  public OnSelectPostRequestMessageOrderItemsInner putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Describes a tag. This is a simple key-value store which is used to contain extended metadata
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Describes a tag. This is a simple key-value store which is used to contain extended metadata")

  public Map<String, String> getTags() {
    return tags;
  }


  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  public OnSelectPostRequestMessageOrderItemsInner quantity(ItemQuantity quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemQuantity getQuantity() {
    return quantity;
  }


  public void setQuantity(ItemQuantity quantity) {
    this.quantity = quantity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OnSelectPostRequestMessageOrderItemsInner onSelectPostRequestMessageOrderItemsInner = (OnSelectPostRequestMessageOrderItemsInner) o;
    return Objects.equals(this.id, onSelectPostRequestMessageOrderItemsInner.id) &&
        Objects.equals(this.parentItemId, onSelectPostRequestMessageOrderItemsInner.parentItemId) &&
        Objects.equals(this.descriptor, onSelectPostRequestMessageOrderItemsInner.descriptor) &&
        Objects.equals(this.price, onSelectPostRequestMessageOrderItemsInner.price) &&
        Objects.equals(this.categoryId, onSelectPostRequestMessageOrderItemsInner.categoryId) &&
        Objects.equals(this.fulfillmentId, onSelectPostRequestMessageOrderItemsInner.fulfillmentId) &&
        Objects.equals(this.rating, onSelectPostRequestMessageOrderItemsInner.rating) &&
        Objects.equals(this.locationId, onSelectPostRequestMessageOrderItemsInner.locationId) &&
        Objects.equals(this.time, onSelectPostRequestMessageOrderItemsInner.time) &&
        Objects.equals(this.rateable, onSelectPostRequestMessageOrderItemsInner.rateable) &&
        Objects.equals(this.matched, onSelectPostRequestMessageOrderItemsInner.matched) &&
        Objects.equals(this.related, onSelectPostRequestMessageOrderItemsInner.related) &&
        Objects.equals(this.recommended, onSelectPostRequestMessageOrderItemsInner.recommended) &&
        Objects.equals(this.tags, onSelectPostRequestMessageOrderItemsInner.tags) &&
        Objects.equals(this.quantity, onSelectPostRequestMessageOrderItemsInner.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, parentItemId, descriptor, price, categoryId, fulfillmentId, rating, locationId, time, rateable, matched, related, recommended, tags, quantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OnSelectPostRequestMessageOrderItemsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parentItemId: ").append(toIndentedString(parentItemId)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    fulfillmentId: ").append(toIndentedString(fulfillmentId)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    rateable: ").append(toIndentedString(rateable)).append("\n");
    sb.append("    matched: ").append(toIndentedString(matched)).append("\n");
    sb.append("    related: ").append(toIndentedString(related)).append("\n");
    sb.append("    recommended: ").append(toIndentedString(recommended)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("parent_item_id");
    openapiFields.add("descriptor");
    openapiFields.add("price");
    openapiFields.add("category_id");
    openapiFields.add("fulfillment_id");
    openapiFields.add("rating");
    openapiFields.add("location_id");
    openapiFields.add("time");
    openapiFields.add("rateable");
    openapiFields.add("matched");
    openapiFields.add("related");
    openapiFields.add("recommended");
    openapiFields.add("tags");
    openapiFields.add("quantity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OnSelectPostRequestMessageOrderItemsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OnSelectPostRequestMessageOrderItemsInner.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OnSelectPostRequestMessageOrderItemsInner is not found in the empty JSON string", OnSelectPostRequestMessageOrderItemsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OnSelectPostRequestMessageOrderItemsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OnSelectPostRequestMessageOrderItemsInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `descriptor`
      if (jsonObj.get("descriptor") != null && !jsonObj.get("descriptor").isJsonNull()) {
        Descriptor.validateJsonObject(jsonObj.getAsJsonObject("descriptor"));
      }
      // validate the optional field `price`
      if (jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull()) {
        Price.validateJsonObject(jsonObj.getAsJsonObject("price"));
      }
      // validate the optional field `time`
      if (jsonObj.get("time") != null && !jsonObj.get("time").isJsonNull()) {
        Time.validateJsonObject(jsonObj.getAsJsonObject("time"));
      }
      // validate the optional field `quantity`
      if (jsonObj.get("quantity") != null && !jsonObj.get("quantity").isJsonNull()) {
        ItemQuantity.validateJsonObject(jsonObj.getAsJsonObject("quantity"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OnSelectPostRequestMessageOrderItemsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OnSelectPostRequestMessageOrderItemsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OnSelectPostRequestMessageOrderItemsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OnSelectPostRequestMessageOrderItemsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<OnSelectPostRequestMessageOrderItemsInner>() {
           @Override
           public void write(JsonWriter out, OnSelectPostRequestMessageOrderItemsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OnSelectPostRequestMessageOrderItemsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OnSelectPostRequestMessageOrderItemsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OnSelectPostRequestMessageOrderItemsInner
  * @throws IOException if the JSON string is invalid with respect to OnSelectPostRequestMessageOrderItemsInner
  */
  public static OnSelectPostRequestMessageOrderItemsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OnSelectPostRequestMessageOrderItemsInner.class);
  }

 /**
  * Convert an instance of OnSelectPostRequestMessageOrderItemsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

