openapi: 3.0.0
info:
  description: ONDC Protocol Core API specification. This is an adaptation of Beckn
    Core version 0.9.3
  title: ONDC Protocol Core API
  version: 1.0.1
servers:
- url: /
security:
- SubscriberAuth: []
- GatewaySubscriberAuth: []
- GatewaySubscriberAuthNew: []
paths:
  /search:
    post:
      description: Search for services by intent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_search_post_request'
        description: Buyer searches for products and services
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Seller App
      - ONDC Gateway
      x-content-type: application/json
      x-accepts: application/json
  /select:
    post:
      description: Select items from the catalog and build your order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_select_post_request'
        description: Buyer selects one or more catalog items
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Seller App
      x-content-type: application/json
      x-accepts: application/json
  /init:
    post:
      description: Initialize an order by providing billing and/or shipping details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_select_post_request'
        description: Buyer initializes order checkout
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Seller App
      x-content-type: application/json
      x-accepts: application/json
  /confirm:
    post:
      description: Initialize an order by providing billing and/or shipping details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_select_post_request'
        description: Buyer confirms an order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Seller App
      x-content-type: application/json
      x-accepts: application/json
  /status:
    post:
      description: Fetch the latest order object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_status_post_request'
        description: Buyer checks for status of order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Seller App
      x-content-type: application/json
      x-accepts: application/json
  /track:
    post:
      description: Track an active order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_track_post_request'
        description: Buyer tracks fulfillment of an order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Seller App
      x-content-type: application/json
      x-accepts: application/json
  /cancel:
    post:
      description: Cancel an order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_cancel_post_request'
        description: Buyer cancels an order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Seller App
      x-content-type: application/json
      x-accepts: application/json
  /update:
    post:
      description: Update an order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_update_post_request'
        description: Buyer updates an order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Seller App
      x-content-type: application/json
      x-accepts: application/json
  /rating:
    post:
      description: Provide feedback on a service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_rating_post_request'
        description: Buyer rates for one or more rating categories
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Seller App
      x-content-type: application/json
      x-accepts: application/json
  /support:
    post:
      description: Contact support
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_support_post_request'
        description: Buyer searches for Support Contact details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Seller App
      x-content-type: application/json
      x-accepts: application/json
  /on_search:
    post:
      description: Send catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_on_search_post_request'
        description: Sellers provide their catalog in response to buyer search
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_on_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Buyer App
      - ONDC Gateway
      x-content-type: application/json
      x-accepts: application/json
  /on_select:
    post:
      description: Send draft order object with quoted price for selected items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_on_select_post_request'
        description: Seller provides quote for selected items
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Buyer App
      x-content-type: application/json
      x-accepts: application/json
  /on_init:
    post:
      description: Send order object with payment details updated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_on_init_post_request'
        description: Seller provides terms and conditions for an order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Buyer App
      x-content-type: application/json
      x-accepts: application/json
  /on_confirm:
    post:
      description: Send active order object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_on_confirm_post_request'
        description: Seller confirms order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Buyer App
      x-content-type: application/json
      x-accepts: application/json
  /on_track:
    post:
      description: Send tracking details of an active order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_on_track_post_request'
        description: Seller provides tracking details for an order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Buyer App
      x-content-type: application/json
      x-accepts: application/json
  /on_cancel:
    post:
      description: Send cancellation request_id with reasons list in case of cancellation
        request. Else send cancelled order object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_on_confirm_post_request'
        description: Seller provides response to cancellation request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Buyer App
      x-content-type: application/json
      x-accepts: application/json
  /on_update:
    post:
      description: Returns updated service with updated runtime object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_on_confirm_post_request'
        description: Seller provides response to order update
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Buyer App
      x-content-type: application/json
      x-accepts: application/json
  /on_status:
    post:
      description: Fetch the status of a Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_on_confirm_post_request'
        description: Seller provides status information for order
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Buyer App
      x-content-type: application/json
      x-accepts: application/json
  /on_rating:
    post:
      description: Provide feedback on a service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_on_rating_post_request'
        description: Seller provides response to rating provided by buyer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Buyer App
      x-content-type: application/json
      x-accepts: application/json
  /on_support:
    post:
      description: Contact Support
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_on_support_post_request'
        description: Seller provides Contact Support details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - ONDC Buyer App
      x-content-type: application/json
      x-accepts: application/json
  /get_cancellation_reasons:
    post:
      description: Get cancellation reasons from the Seller App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_get_cancellation_reasons_post_request'
        description: Context header is sent as the request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - Seller App Meta APIs
      x-content-type: application/json
      x-accepts: application/json
  /cancellation_reasons:
    post:
      description: Get cancellation reasons from the Seller App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_cancellation_reasons_post_request'
        description: List of cancellation reasons
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - Buyer App Meta APIs
      x-content-type: application/json
      x-accepts: application/json
  /get_return_reasons:
    post:
      description: Get return reasons from the Seller App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_get_cancellation_reasons_post_request'
        description: Context header is sent as the request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - Seller App Meta APIs
      x-content-type: application/json
      x-accepts: application/json
  /return_reasons:
    post:
      description: Get return reasons from the Seller App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_return_reasons_post_request'
        description: List of return reasons
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - Buyer App Meta APIs
      x-content-type: application/json
      x-accepts: application/json
  /get_rating_categories:
    post:
      description: Get a list of categories that can be rated by the Seller App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_get_cancellation_reasons_post_request'
        description: Context header is sent as the request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - Seller App Meta APIs
      x-content-type: application/json
      x-accepts: application/json
  /rating_categories:
    post:
      description: Get a list of categories that can be rated by the Buyer App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_rating_categories_post_request'
        description: Array of categories which can be rated
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - Buyer App Meta APIs
      x-content-type: application/json
      x-accepts: application/json
  /get_feedback_categories:
    post:
      description: Get a list of categories for which feedback can be given by the
        Buyer App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_get_cancellation_reasons_post_request'
        description: Context header is sent as the request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - Seller Meta APIs
      x-content-type: application/json
      x-accepts: application/json
  /feedback_categories:
    post:
      description: Get a list of categories for which feedback can be given by the
        Buyer App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_feedback_categories_post_request'
        description: Array of categories for which feedback can be given by the Buyer
          App
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - Buyer App Meta APIs
      x-content-type: application/json
      x-accepts: application/json
  /get_feedback_form:
    post:
      description: Request a feedback form from the Seller App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_get_feedback_form_post_request'
        description: The rating value and category is sent by the Buyer App
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - Seller App Meta APIs
      x-content-type: application/json
      x-accepts: application/json
  /feedback_form:
    post:
      description: Get a feedback form from the Seller App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_feedback_form_post_request'
        description: Feedback form sent by the Buyer App
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_search_post_200_response'
          description: Acknowledgement of message received
      tags:
      - Buyer App Meta APIs
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    Ack:
      description: Describes the ACK response
      example:
        status: ACK
      properties:
        status:
          description: "Describe the status of the ACK response. If schema validation\
            \ passes, status is ACK else it is NACK"
          enum:
          - ACK
          - NACK
          type: string
      required:
      - status
      type: object
    AddOn:
      description: Describes an add-on
      properties:
        id:
          description: "ID of the add-on. This follows the syntax {item.id}/add-on/{add-on\
            \ unique id} for item specific add-on OR "
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        price:
          $ref: '#/components/schemas/Price'
      type: object
    Address:
      description: Describes an address
      properties:
        door:
          description: Door / Shop number of the address
          type: string
        name:
          description: "Name of address if applicable. Example, shop name"
          type: string
        building:
          description: Name of the building or block
          type: string
        street:
          description: Street name or number
          type: string
        locality:
          description: "Name of the locality, apartments"
          type: string
        ward:
          description: Name or number of the ward if applicable
          type: string
        city:
          description: City name
          type: string
        state:
          description: State name
          type: string
        country:
          description: Country name
          type: string
        area_code:
          description: "Area code. This can be Pincode, ZIP code or any equivalent"
          type: string
      type: object
    Agent:
      allOf:
      - $ref: '#/components/schemas/Person'
      - $ref: '#/components/schemas/Contact'
      - $ref: '#/components/schemas/Agent_allOf'
      description: Describes an order executor
    Authorization:
      description: Describes an authorization mechanism
      properties:
        type:
          description: Type of authorization mechanism used
          type: string
        token:
          description: Token used for authorization
          type: string
        valid_from:
          description: Timestamp in RFC3339 format from which token is valid
          format: date-time
          type: string
        valid_to:
          description: Timestamp in RFC3339 format until which token is valid
          format: date-time
          type: string
        status:
          description: Status of the token
          type: string
      type: object
    Billing:
      description: Describes a billing event
      properties:
        name:
          description: Personal details of the customer needed for billing.
          type: string
        organization:
          $ref: '#/components/schemas/Organization'
        address:
          $ref: '#/components/schemas/Address'
        email:
          format: email
          type: string
        phone:
          type: string
        time:
          $ref: '#/components/schemas/Time'
        tax_number:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - name
      - phone
      type: object
    Cancellation:
      description: Describes the ACK response
      properties:
        type:
          enum:
          - full
          - partial
          type: string
        ref_id:
          type: string
        policies:
          items:
            $ref: '#/components/schemas/Policy'
          type: array
        time:
          format: date-time
          type: string
        cancelled_by:
          type: string
        reasons:
          $ref: '#/components/schemas/Option'
        selected_reason:
          $ref: '#/components/schemas/Cancellation_selected_reason'
        additional_description:
          $ref: '#/components/schemas/Descriptor'
      type: object
    Catalog:
      description: Describes a Seller App catalog
      properties:
        bpp/descriptor:
          $ref: '#/components/schemas/Descriptor'
        bpp/categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
        bpp/fulfillments:
          items:
            $ref: '#/components/schemas/Fulfillment'
          type: array
        bpp/payments:
          items:
            $ref: '#/components/schemas/Payment'
          type: array
        bpp/offers:
          items:
            $ref: '#/components/schemas/Offer'
          type: array
        bpp/providers:
          items:
            $ref: '#/components/schemas/Provider'
          type: array
        exp:
          description: Time after which catalog has to be refreshed
          format: date-time
          type: string
      type: object
    Category:
      description: Describes a category
      properties:
        id:
          description: Unique id of the category
          type: string
        parent_category_id:
          $ref: '#/components/schemas/Category/properties/id'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        time:
          $ref: '#/components/schemas/Time'
        tags:
          additionalProperties:
            type: string
          description: Describes a tag. This is a simple key-value store which is
            used to contain extended metadata
          type: object
      type: object
    Circle:
      description: Describes a circular area on the map
      properties:
        gps:
          description: Describes a gps coordinate
          pattern: "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\\
            d)|([1-9]?\\d))(\\.\\d+)?)$"
          type: string
        radius:
          $ref: '#/components/schemas/Scalar'
      required:
      - gps
      - radius
      type: object
    City:
      description: Describes a city
      properties:
        name:
          description: Name of the city
          type: string
        code:
          description: "Codification of city code will be using the std code of the\
            \ city e.g. for Bengaluru, city code is 'std:080'"
          type: string
      type: object
    Contact:
      properties:
        phone:
          type: string
        email:
          type: string
        tags:
          additionalProperties:
            type: string
          description: Describes a tag. This is a simple key-value store which is
            used to contain extended metadata
          type: object
      type: object
    Context:
      description: Describes a ONDC message context
      properties:
        domain:
          description: Codification of domains supported by ONDC
          type: string
        country:
          $ref: '#/components/schemas/Country/properties/code'
        city:
          $ref: '#/components/schemas/City/properties/code'
        action:
          description: Defines the ONDC API call. Any actions other than the enumerated
            actions are not supported by ONDC Protocol
          enum:
          - search
          - select
          - init
          - confirm
          - update
          - status
          - track
          - cancel
          - rating
          - support
          - on_search
          - on_select
          - on_init
          - on_confirm
          - on_update
          - on_status
          - on_track
          - on_cancel
          - on_rating
          - on_support
          type: string
        core_version:
          description: Version of ONDC core API specification being used
          type: string
        bap_id:
          description: Unique id of the Buyer App. By default it is the fully qualified
            domain name of the Buyer App
          type: string
        bap_uri:
          description: URI of the Seller App for accepting callbacks. Must have the
            same domain name as the bap_id
          format: uri
          type: string
        bpp_id:
          description: Unique id of the Seller App. By default it is the fully qualified
            domain name of the Seller App
          type: string
        bpp_uri:
          description: URI of the Seller App. Must have the same domain name as the
            bap_id
          format: uri
          type: string
        transaction_id:
          description: This is a unique value which persists across all API calls
            from search through confirm
          type: string
        message_id:
          description: This is a unique value which persists during a request / callback
            cycle
          type: string
        timestamp:
          description: Time of request generation in RFC3339 format
          format: date-time
          type: string
        key:
          description: The encryption public key of the sender
          type: string
        ttl:
          description: The duration in ISO8601 format after timestamp for which this
            message holds valid.
          type: string
      required:
      - action
      - bap_id
      - bap_uri
      - city
      - core_version
      - country
      - domain
      - message_id
      - timestamp
      - transaction_id
      type: object
    Country:
      description: Describes a country.
      properties:
        name:
          description: Name of the country
          type: string
        code:
          description: Country code as per ISO 3166 Alpha-3 code format
          type: string
      type: object
    DecimalValue:
      description: Describes a decimal value
      pattern: "[+-]?([0-9]*[.])?[0-9]+"
      type: string
    Descriptor:
      description: Describes the description of a real-world object.
      properties:
        name:
          type: string
        code:
          type: string
        symbol:
          type: string
        short_desc:
          type: string
        long_desc:
          type: string
        images:
          items:
            $ref: '#/components/schemas/Image'
          type: array
        audio:
          format: uri
          type: string
        "3d_render":
          format: uri
          type: string
      type: object
    Dimensions:
      description: Describes the dimensions of a real-world object
      properties:
        length:
          $ref: '#/components/schemas/Scalar'
        breadth:
          $ref: '#/components/schemas/Scalar'
        height:
          $ref: '#/components/schemas/Scalar'
      type: object
    Document:
      description: Describes a document which can be sent as a url
      properties:
        url:
          format: uri
          type: string
        label:
          type: string
      type: object
    Domain:
      description: Codification of domains supported by ONDC
      type: string
    Duration:
      description: Describes duration as per ISO8601 format
      type: string
    Error:
      description: Describes an error object
      example:
        path: path
        code: code
        type: CONTEXT-ERROR
        message: message
      properties:
        type:
          enum:
          - CONTEXT-ERROR
          - CORE-ERROR
          - DOMAIN-ERROR
          - POLICY-ERROR
          - JSON-SCHEMA-ERROR
          type: string
        code:
          description: "ONDC specific error code. For full list of error codes, refer\
            \ to docs/drafts/Error Codes.md of this repo"
          type: string
        path:
          description: Path to json schema generating the error. Used only during
            json schema validation errors
          type: string
        message:
          description: Human readable message describing the error
          type: string
      required:
      - code
      - type
      type: object
    Feedback:
      description: Feedback for a service
      properties:
        feedback_form:
          description: Describes a feedback form that a Seller App can send to get
            feedback from the Buyer App
          items:
            $ref: '#/components/schemas/FeedbackFormElement'
          type: array
        feedback_url:
          $ref: '#/components/schemas/FeedbackUrl'
      type: object
    FeedbackForm:
      description: Describes a feedback form that a Seller App can send to get feedback
        from the Buyer App
      items:
        $ref: '#/components/schemas/FeedbackFormElement'
      type: array
    FeedbackFormElement:
      description: An element in the feedback form. It can be question or an answer
        to the question.
      properties:
        id:
          type: string
        parent_id:
          $ref: '#/components/schemas/FeedbackFormElement/properties/id'
        question:
          description: Specifies the question to which the answer options will be
            contained in the child FeedbackFormElements
          type: string
        answer:
          description: Specifies an answer option to which the question will be in
            the FeedbackFormElement specified in parent_id
          type: string
        answer_type:
          description: Specifies how the answer option should be rendered.
          enum:
          - radio
          - checkbox
          - text
          type: string
      type: object
    FeedbackUrl:
      description: Describes how a feedback URL will be sent by the Seller App
      properties:
        url:
          description: feedback URL sent by the Seller App
          format: uri
          type: string
        tl_method:
          enum:
          - http/get
          - http/post
          type: string
        params:
          $ref: '#/components/schemas/FeedbackUrl_params'
      type: object
    Fulfillment:
      description: Describes how a single product/service will be rendered/fulfilled
        to the end customer
      properties:
        id:
          description: Unique reference ID to the fulfillment of an order
          type: string
        type:
          description: This describes the type of fulfillment
          type: string
        provider_id:
          $ref: '#/components/schemas/Provider/properties/id'
        rating:
          $ref: '#/components/schemas/Rating/properties/value'
        state:
          $ref: '#/components/schemas/State'
        tracking:
          default: false
          description: Indicates whether the fulfillment allows tracking
          type: boolean
        customer:
          $ref: '#/components/schemas/Fulfillment_customer'
        agent:
          $ref: '#/components/schemas/Agent'
        person:
          $ref: '#/components/schemas/Person'
        contact:
          $ref: '#/components/schemas/Contact'
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        start:
          $ref: '#/components/schemas/Fulfillment_start'
        end:
          $ref: '#/components/schemas/Fulfillment_end'
        rateable:
          description: If the entity can be rated or not
          type: boolean
        tags:
          additionalProperties:
            type: string
          description: Describes a tag. This is a simple key-value store which is
            used to contain extended metadata
          type: object
      type: object
    Gps:
      description: Describes a gps coordinate
      pattern: "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\\
        d)|([1-9]?\\d))(\\.\\d+)?)$"
      type: string
    Image:
      description: "Image of an object. <br/><br/> A url based image will look like\
        \ <br/><br/>```uri:http://path/to/image``` <br/><br/> An image can also be\
        \ sent as a data string. For example : <br/><br/> ```data:js87y34ilhriuho84r3i4```"
      type: string
    Intent:
      description: Intent of a user. Used for searching for services
      properties:
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        provider:
          $ref: '#/components/schemas/Provider'
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
        payment:
          $ref: '#/components/schemas/Payment'
        category:
          $ref: '#/components/schemas/Category'
        offer:
          $ref: '#/components/schemas/Offer'
        item:
          $ref: '#/components/schemas/Item'
        tags:
          additionalProperties:
            type: string
          description: Describes a tag. This is a simple key-value store which is
            used to contain extended metadata
          type: object
      type: object
    ItemQuantity:
      description: Describes count or amount of an item
      properties:
        allocated:
          $ref: '#/components/schemas/ItemQuantity_allocated'
        available:
          $ref: '#/components/schemas/ItemQuantity_allocated'
        maximum:
          $ref: '#/components/schemas/ItemQuantity_maximum'
        minimum:
          $ref: '#/components/schemas/ItemQuantity_allocated'
        selected:
          $ref: '#/components/schemas/ItemQuantity_allocated'
      type: object
    Item:
      description: Describes a product or a service offered to the end consumer by
        the provider.
      properties:
        id:
          description: This is the most unique identifier of a service item. An example
            of an Item ID could be the SKU of a product.
          type: string
        parent_item_id:
          $ref: '#/components/schemas/Item/properties/id'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        price:
          $ref: '#/components/schemas/Price'
        category_id:
          $ref: '#/components/schemas/Category/properties/id'
        fulfillment_id:
          $ref: '#/components/schemas/Fulfillment/properties/id'
        rating:
          $ref: '#/components/schemas/Rating/properties/value'
        location_id:
          $ref: '#/components/schemas/Location/properties/id'
        time:
          $ref: '#/components/schemas/Time'
        rateable:
          description: If the entity can be rated or not
          type: boolean
        matched:
          type: boolean
        related:
          type: boolean
        recommended:
          type: boolean
        tags:
          additionalProperties:
            type: string
          description: Describes a tag. This is a simple key-value store which is
            used to contain extended metadata
          type: object
      type: object
    Language:
      description: indicates language code. ONDC supports language codes as per ISO
        639.2 standard
      properties:
        code:
          type: string
      type: object
    Location:
      description: Describes the location of a runtime object.
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        gps:
          description: Describes a gps coordinate
          pattern: "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\\
            d)|([1-9]?\\d))(\\.\\d+)?)$"
          type: string
        address:
          $ref: '#/components/schemas/Address'
        station_code:
          type: string
        city:
          $ref: '#/components/schemas/City'
        country:
          $ref: '#/components/schemas/Country'
        circle:
          $ref: '#/components/schemas/Circle'
        polygon:
          type: string
        "3dspace":
          type: string
        time:
          $ref: '#/components/schemas/Time'
      type: object
    Name:
      description: "Describes the name of a person in format: ./{given_name}/{honorific_prefix}/{first_name}/{middle_name}/{last_name}/{honorific_suffix}"
      pattern: "^\\./[^/]+/[^/]*/[^/]*/[^/]*/[^/]*/[^/]*$"
      type: string
    Offer:
      description: Describes an offer
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        location_ids:
          items:
            $ref: '#/components/schemas/Location/properties/id'
          type: array
        category_ids:
          items:
            $ref: '#/components/schemas/Category/properties/id'
          type: array
        item_ids:
          items:
            $ref: '#/components/schemas/Item/properties/id'
          type: array
        time:
          $ref: '#/components/schemas/Time'
      type: object
    Operator:
      allOf:
      - $ref: '#/components/schemas/Person'
      - $ref: '#/components/schemas/Operator_allOf'
      description: Describes the agent of a service
    Option:
      description: Describes a selectable option
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
      type: object
    Order:
      description: Describes the details of an order
      properties:
        id:
          description: Hash of order object without id
          type: string
        state:
          type: string
        provider:
          $ref: '#/components/schemas/Order_provider'
        items:
          items:
            $ref: '#/components/schemas/Order_items_inner'
          type: array
        add_ons:
          items:
            $ref: '#/components/schemas/Order_add_ons_inner'
          type: array
        offers:
          items:
            $ref: '#/components/schemas/Order_offers_inner'
          type: array
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        billing:
          $ref: '#/components/schemas/Billing'
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
        quote:
          $ref: '#/components/schemas/Quotation'
        payment:
          $ref: '#/components/schemas/Payment'
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    Organization:
      description: Describes an organization
      properties:
        name:
          type: string
        cred:
          type: string
      type: object
    Page:
      description: Describes a page in a search result
      properties:
        id:
          type: string
        next_id:
          type: string
      type: object
    Payment:
      description: Describes a payment
      properties:
        uri:
          description: "A payment uri to be called by the Buyer App. If empty, then\
            \ the payment is to be done offline. The details of payment should be\
            \ present in the params object. If ```tl_method``` = http/get, then the\
            \ payment details will be sent as url params. Two url param values, ```$transaction_id```\
            \ and ```$amount``` are mandatory. And example url would be : https://www.example.com/pay?txid=$transaction_id&amount=$amount&vpa=upiid&payee=shopez&billno=1234"
          format: uri
          type: string
        tl_method:
          enum:
          - http/get
          - http/post
          - payto
          - upi
          type: string
        params:
          $ref: '#/components/schemas/Payment_params'
        type:
          enum:
          - ON-ORDER
          - PRE-FULFILLMENT
          - ON-FULFILLMENT
          - POST-FULFILLMENT
          type: string
        status:
          enum:
          - PAID
          - NOT-PAID
          type: string
        time:
          $ref: '#/components/schemas/Time'
        collected_by:
          enum:
          - BAP
          - BPP
          type: string
      type: object
    Person:
      description: Describes a person.
      properties:
        name:
          description: "Describes the name of a person in format: ./{given_name}/{honorific_prefix}/{first_name}/{middle_name}/{last_name}/{honorific_suffix}"
          pattern: "^\\./[^/]+/[^/]*/[^/]*/[^/]*/[^/]*/[^/]*$"
          type: string
        image:
          description: "Image of an object. <br/><br/> A url based image will look\
            \ like <br/><br/>```uri:http://path/to/image``` <br/><br/> An image can\
            \ also be sent as a data string. For example : <br/><br/> ```data:js87y34ilhriuho84r3i4```"
          type: string
        dob:
          format: date
          type: string
        gender:
          description: "Gender of something, typically a Person, but possibly also\
            \ fictional characters, animals, etc. While Male and Female may be used,\
            \ text strings are also acceptable for people who do not identify as a\
            \ binary gender"
          type: string
        cred:
          type: string
        tags:
          additionalProperties:
            type: string
          description: Describes a tag. This is a simple key-value store which is
            used to contain extended metadata
          type: object
      type: object
    Policy:
      description: Describes a policy. Allows for domain extension.
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        parent_policy_id:
          $ref: '#/components/schemas/Policy/properties/id'
        time:
          $ref: '#/components/schemas/Time'
      type: object
    Price:
      description: Describes the price of an item. Allows for domain extension.
      properties:
        currency:
          description: ISO 4217 alphabetic currency code e.g. 'INR'
          type: string
        value:
          description: Describes a decimal value
          pattern: "[+-]?([0-9]*[.])?[0-9]+"
          type: string
        estimated_value:
          description: Describes a decimal value
          pattern: "[+-]?([0-9]*[.])?[0-9]+"
          type: string
        computed_value:
          description: Describes a decimal value
          pattern: "[+-]?([0-9]*[.])?[0-9]+"
          type: string
        listed_value:
          description: Describes a decimal value
          pattern: "[+-]?([0-9]*[.])?[0-9]+"
          type: string
        offered_value:
          description: Describes a decimal value
          pattern: "[+-]?([0-9]*[.])?[0-9]+"
          type: string
        minimum_value:
          description: Describes a decimal value
          pattern: "[+-]?([0-9]*[.])?[0-9]+"
          type: string
        maximum_value:
          description: Describes a decimal value
          pattern: "[+-]?([0-9]*[.])?[0-9]+"
          type: string
      type: object
    Provider:
      description: "Describes a service provider. This can be a restaurant, a hospital,\
        \ a Store etc"
      properties:
        id:
          description: Id of the provider
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        category_id:
          description: Category Id of the provider
          type: string
        rating:
          $ref: '#/components/schemas/Rating/properties/value'
        time:
          $ref: '#/components/schemas/Time'
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
        fulfillments:
          items:
            $ref: '#/components/schemas/Fulfillment'
          type: array
        payments:
          items:
            $ref: '#/components/schemas/Payment'
          type: array
        locations:
          items:
            $ref: '#/components/schemas/Provider_locations_inner'
          type: array
        offers:
          items:
            $ref: '#/components/schemas/Offer'
          type: array
        items:
          items:
            $ref: '#/components/schemas/Item'
          type: array
        exp:
          description: Time after which catalog has to be refreshed
          format: date-time
          type: string
        rateable:
          description: If the entity can be rated or not
          type: boolean
        tags:
          additionalProperties:
            type: string
          description: Describes a tag. This is a simple key-value store which is
            used to contain extended metadata
          type: object
      type: object
    Quotation:
      description: Describes a quote
      properties:
        price:
          $ref: '#/components/schemas/Price'
        breakup:
          items:
            $ref: '#/components/schemas/Quotation_breakup_inner'
          type: array
        ttl:
          description: Describes duration as per ISO8601 format
          type: string
      type: object
    Rateable:
      description: If the entity can be rated or not
      type: boolean
    Rating:
      description: Describes the rating of a person or an object.
      properties:
        rating_category:
          description: Category of the object being rated
          type: string
        id:
          description: Id of the object being rated
          type: string
        value:
          description: Rating value given to the object
          minimum: 0
          type: number
        feedback_form:
          description: Describes a feedback form that a Seller App can send to get
            feedback from the Buyer App
          items:
            $ref: '#/components/schemas/FeedbackFormElement'
          type: array
        feedback_id:
          $ref: '#/components/schemas/FeedbackUrl/properties/params/properties/feedback_id'
      type: object
    RatingAck:
      properties:
        feedback_ack:
          description: If feedback has been recorded or not
          type: boolean
        rating_ack:
          description: If rating has been recorded or not
          type: boolean
      type: object
    Scalar:
      description: An object representing a scalar quantity.
      properties:
        type:
          enum:
          - CONSTANT
          - VARIABLE
          type: string
        value:
          type: number
        estimated_value:
          type: number
        computed_value:
          type: number
        range:
          $ref: '#/components/schemas/Scalar_range'
        unit:
          type: string
      required:
      - unit
      - value
      type: object
    Schedule:
      description: Describes a schedule
      properties:
        frequency:
          description: Describes duration as per ISO8601 format
          type: string
        holidays:
          items:
            format: date-time
            type: string
          type: array
        times:
          items:
            format: date-time
            type: string
          type: array
      type: object
    State:
      description: Describes a state
      properties:
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        updated_at:
          format: date-time
          type: string
        updated_by:
          description: ID of entity which changed the state
          type: string
      type: object
    Subscriber:
      description: "Any entity which wants to authenticate itself on a network. This\
        \ can be a Buyer App, Seller App or Gateway."
      properties:
        subscriber_id:
          description: Registered domain name of the subscriber. Must have a valid
            SSL certificate issued by a Certificate Authority of the operating region
          type: string
        type:
          enum:
          - bap
          - bpp
          - bg
          type: string
        cb_url:
          description: Callback URL of the subscriber. The Registry will call this
            URL's on_subscribe API to validate the subscriber\'s credentials
          type: string
        domain:
          description: Codification of domains supported by ONDC
          type: string
        city:
          $ref: '#/components/schemas/City/properties/code'
        country:
          $ref: '#/components/schemas/Country/properties/code'
        signing_public_key:
          description: "Signing Public key of the subscriber. <br/><br/>Any subscriber\
            \ platform (Buyer App, Seller App, Gateway) who wants to transact on the\
            \ network must digitally sign the ```requestBody``` using the corresponding\
            \ private key of this public key and send it in the transport layer header.\
            \ In case of ```HTTP``` it is the ```Authorization``` header. <br><br/>The\
            \ ```Authorization``` will be used to validate the signature of a Buyer\
            \ App or Seller App.<br/><br/>Furthermore, if an API call is being proxied\
            \ or multicast by a ONDC Gateway, the Gateway must use it\\'s signing\
            \ key to digitally sign the ```requestBody``` using the corresponding\
            \ private key of this public key and send it in the ```X-Gateway-Authorization```\
            \ header."
          type: string
        encryption_public_key:
          description: Encryption public key of the Buyer App. Any Seller App must
            encrypt the ```requestBody.message``` value of the ```on_search``` API
            using this public key.
          type: string
        status:
          enum:
          - INITIATED
          - UNDER_SUBSCRIPTION
          - SUBSCRIBED
          - INVALID_SSL
          - UNSUBSCRIBED
          type: string
        created:
          description: Timestamp when a subscriber was added to the registry with
            status = INITIATED
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
        expires:
          description: Expiry timestamp in UTC derived from the ```lease_time``` of
            the subscriber
          format: date-time
          type: string
      type: object
    Support:
      description: Customer support
      properties:
        type:
          enum:
          - order
          - billing
          - fulfillment
          type: string
        ref_id:
          type: string
        channels:
          additionalProperties:
            type: string
          description: Describes a tag. This is a simple key-value store which is
            used to contain extended metadata
          type: object
      type: object
    Tags:
      additionalProperties:
        type: string
      description: Describes a tag. This is a simple key-value store which is used
        to contain extended metadata
      type: object
    Time:
      description: Describes time in its various forms. It can be a single point in
        time; duration; or a structured timetable of operations
      properties:
        label:
          type: string
        timestamp:
          format: date-time
          type: string
        duration:
          description: Describes duration as per ISO8601 format
          type: string
        range:
          $ref: '#/components/schemas/Time_range'
        days:
          description: comma separated values representing days of the week
          type: string
        schedule:
          $ref: '#/components/schemas/Schedule'
      type: object
    TrackingData:
      $ref: '#/components/schemas/Location/properties/gps'
    Tracking:
      description: Describes the tracking info of an object
      properties:
        url:
          format: uri
          type: string
        status:
          enum:
          - active
          - inactive
          type: string
      type: object
    Vehicle:
      description: Describes the properties of a vehicle used in a mobility service
      properties:
        category:
          type: string
        capacity:
          type: integer
        make:
          type: string
        model:
          type: string
        size:
          type: string
        variant:
          type: string
        color:
          type: string
        energy_type:
          type: string
        registration:
          type: string
      type: object
    _search_post_request_message:
      properties:
        intent:
          $ref: '#/components/schemas/Intent'
      type: object
    _search_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_search_post_request_message'
      required:
      - context
      - message
      type: object
    _search_post_200_response_message:
      example:
        ack:
          status: ACK
      properties:
        ack:
          $ref: '#/components/schemas/Ack'
      required:
      - ack
      type: object
    _search_post_200_response:
      example:
        message:
          ack:
            status: ACK
        error:
          path: path
          code: code
          type: CONTEXT-ERROR
          message: message
      properties:
        message:
          $ref: '#/components/schemas/_search_post_200_response_message'
        error:
          $ref: '#/components/schemas/Error'
      required:
      - message
      type: object
    _select_post_request_message:
      properties:
        order:
          $ref: '#/components/schemas/Order'
      required:
      - order
      type: object
    _select_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_select_post_request_message'
      required:
      - context
      - message
      type: object
    _status_post_request_message:
      properties:
        order_id:
          $ref: '#/components/schemas/Order/properties/id'
      required:
      - order_id
      type: object
    _status_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_status_post_request_message'
      required:
      - context
      - message
      type: object
    _track_post_request_message:
      properties:
        order_id:
          $ref: '#/components/schemas/Order/properties/id'
        callback_url:
          format: uri
          type: string
      required:
      - order_id
      type: object
    _track_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_track_post_request_message'
      required:
      - context
      - message
      type: object
    _cancel_post_request_message:
      properties:
        order_id:
          $ref: '#/components/schemas/Order/properties/id'
        cancellation_reason_id:
          $ref: '#/components/schemas/Option/properties/id'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
      required:
      - order_id
      type: object
    _cancel_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_cancel_post_request_message'
      required:
      - context
      - message
      type: object
    _update_post_request_message:
      properties:
        update_target:
          description: "Comma separated values of order objects being updated. For\
            \ example: ```\"update_target\":\"item,billing,fulfillment\"```"
          type: string
        order:
          $ref: '#/components/schemas/Order'
      required:
      - order
      - update_target
      type: object
    _update_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_update_post_request_message'
      required:
      - context
      - message
      type: object
    _rating_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/Rating'
      required:
      - context
      - message
      type: object
    _support_post_request_message:
      properties:
        ref_id:
          description: ID of the element for which support is needed
          type: string
      type: object
    _support_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_support_post_request_message'
      required:
      - context
      - message
      type: object
    _on_search_post_request_message:
      properties:
        catalog:
          $ref: '#/components/schemas/Catalog'
      required:
      - catalog
      type: object
    _on_search_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_on_search_post_request_message'
        error:
          $ref: '#/components/schemas/Error'
      required:
      - context
      type: object
    _on_search_post_200_response:
      example:
        message:
          ack:
            status: ACK
        error:
          path: path
          code: code
          type: CONTEXT-ERROR
          message: message
      properties:
        message:
          $ref: '#/components/schemas/_search_post_200_response_message'
        error:
          $ref: '#/components/schemas/Error'
      required:
      - context
      type: object
    _on_select_post_request_message_order_items_inner_allOf:
      properties:
        quantity:
          $ref: '#/components/schemas/ItemQuantity'
    _on_select_post_request_message_order_items_inner:
      allOf:
      - $ref: '#/components/schemas/Item'
      - $ref: '#/components/schemas/_on_select_post_request_message_order_items_inner_allOf'
    _on_select_post_request_message_order:
      properties:
        provider:
          $ref: '#/components/schemas/Provider'
        provider_location:
          $ref: '#/components/schemas/Location'
        items:
          items:
            $ref: '#/components/schemas/_on_select_post_request_message_order_items_inner'
          type: array
        add_ons:
          items:
            $ref: '#/components/schemas/AddOn'
          type: array
        offers:
          items:
            $ref: '#/components/schemas/Offer'
          type: array
        quote:
          $ref: '#/components/schemas/Quotation'
      type: object
    _on_select_post_request_message:
      properties:
        order:
          $ref: '#/components/schemas/_on_select_post_request_message_order'
      required:
      - order
      type: object
    _on_select_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_on_select_post_request_message'
        error:
          $ref: '#/components/schemas/Error'
      required:
      - context
      type: object
    _on_init_post_request_message_order_provider:
      properties:
        id:
          $ref: '#/components/schemas/Provider/properties/id'
      type: object
    _on_init_post_request_message_order_provider_location:
      properties:
        id:
          $ref: '#/components/schemas/Location/properties/id'
      type: object
    _on_init_post_request_message_order_items_inner:
      properties:
        id:
          $ref: '#/components/schemas/Item/properties/id'
        quantity:
          $ref: '#/components/schemas/ItemQuantity/properties/selected'
      type: object
    _on_init_post_request_message_order_add_ons_inner:
      properties:
        id:
          $ref: '#/components/schemas/AddOn/properties/id'
      type: object
    _on_init_post_request_message_order_offers_inner:
      properties:
        id:
          $ref: '#/components/schemas/Offer/properties/id'
      type: object
    _on_init_post_request_message_order:
      properties:
        provider:
          $ref: '#/components/schemas/_on_init_post_request_message_order_provider'
        provider_location:
          $ref: '#/components/schemas/_on_init_post_request_message_order_provider_location'
        items:
          items:
            $ref: '#/components/schemas/_on_init_post_request_message_order_items_inner'
          type: array
        add_ons:
          items:
            $ref: '#/components/schemas/_on_init_post_request_message_order_add_ons_inner'
          type: array
        offers:
          items:
            $ref: '#/components/schemas/_on_init_post_request_message_order_offers_inner'
          type: array
        billing:
          $ref: '#/components/schemas/Billing'
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
        quote:
          $ref: '#/components/schemas/Quotation'
        payment:
          $ref: '#/components/schemas/Payment'
      type: object
    _on_init_post_request_message:
      properties:
        order:
          $ref: '#/components/schemas/_on_init_post_request_message_order'
      required:
      - order
      type: object
    _on_init_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_on_init_post_request_message'
        error:
          $ref: '#/components/schemas/Error'
      required:
      - context
      type: object
    _on_confirm_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_select_post_request_message'
        error:
          $ref: '#/components/schemas/Error'
      required:
      - context
      type: object
    _on_track_post_request_message:
      properties:
        tracking:
          $ref: '#/components/schemas/Tracking'
      required:
      - tracking
      type: object
    _on_track_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_on_track_post_request_message'
        error:
          $ref: '#/components/schemas/Error'
      required:
      - context
      type: object
    _on_rating_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/RatingAck'
        error:
          $ref: '#/components/schemas/Error'
      required:
      - context
      type: object
    _on_support_post_request_message:
      properties:
        phone:
          format: phone
          type: string
        email:
          format: email
          type: string
        uri:
          format: uri
          type: string
      type: object
    _on_support_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_on_support_post_request_message'
        error:
          $ref: '#/components/schemas/Error'
      required:
      - context
      type: object
    _get_cancellation_reasons_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
      type: object
    _cancellation_reasons_post_request_message:
      properties:
        cancellation_reasons:
          items:
            $ref: '#/components/schemas/Option'
          type: array
      type: object
    _cancellation_reasons_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_cancellation_reasons_post_request_message'
      type: object
    _return_reasons_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        return_reasons:
          items:
            $ref: '#/components/schemas/Option'
          type: array
      type: object
    _rating_categories_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        rating_categories:
          items:
            $ref: '#/components/schemas/Rating/properties/rating_category'
          type: array
      type: object
    _feedback_categories_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        feedback_categories:
          items:
            $ref: '#/components/schemas/Rating/properties/rating_category'
          type: array
      type: object
    _get_feedback_form_post_request_message:
      properties:
        rating_value:
          $ref: '#/components/schemas/Rating/properties/value'
        rating_category:
          $ref: '#/components/schemas/Rating/properties/rating_category'
      type: object
    _get_feedback_form_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/_get_feedback_form_post_request_message'
      type: object
    _feedback_form_post_request:
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          $ref: '#/components/schemas/Feedback'
      type: object
    Agent_allOf:
      properties:
        rateable:
          description: If the entity can be rated or not
          type: boolean
      type: object
    Cancellation_selected_reason:
      properties:
        id:
          $ref: '#/components/schemas/Option/properties/id'
      type: object
    FeedbackUrl_params:
      additionalProperties:
        type: string
      properties:
        feedback_id:
          description: This value will be placed in the the $feedback_id url param
            in case of http/get and in the requestBody http/post requests
          type: string
      required:
      - feedback_id
      type: object
    Fulfillment_customer:
      properties:
        person:
          $ref: '#/components/schemas/Person'
        contact:
          $ref: '#/components/schemas/Contact'
      type: object
    Fulfillment_start:
      description: Details on the start of fulfillment
      properties:
        location:
          $ref: '#/components/schemas/Location'
        time:
          $ref: '#/components/schemas/Time'
        instructions:
          $ref: '#/components/schemas/Descriptor'
        contact:
          $ref: '#/components/schemas/Contact'
        person:
          $ref: '#/components/schemas/Person'
        authorization:
          $ref: '#/components/schemas/Authorization'
      type: object
    Fulfillment_end:
      description: Details on the end of fulfillment
      properties:
        location:
          $ref: '#/components/schemas/Location'
        time:
          $ref: '#/components/schemas/Time'
        instructions:
          $ref: '#/components/schemas/Descriptor'
        contact:
          $ref: '#/components/schemas/Contact'
        person:
          $ref: '#/components/schemas/Person'
        authorization:
          $ref: '#/components/schemas/Authorization'
      type: object
    ItemQuantity_allocated:
      properties:
        count:
          minimum: 0
          type: integer
        measure:
          $ref: '#/components/schemas/Scalar'
      type: object
    ItemQuantity_maximum:
      properties:
        count:
          minimum: 1
          type: integer
        measure:
          $ref: '#/components/schemas/Scalar'
      type: object
    Operator_allOf_experience:
      properties:
        label:
          type: string
        value:
          type: string
        unit:
          type: string
      type: object
    Operator_allOf:
      properties:
        experience:
          $ref: '#/components/schemas/Operator_allOf_experience'
    Order_provider_locations_inner:
      properties:
        id:
          $ref: '#/components/schemas/Location/properties/id'
      required:
      - id
      type: object
    Order_provider:
      properties:
        id:
          $ref: '#/components/schemas/Provider/properties/id'
        locations:
          items:
            $ref: '#/components/schemas/Order_provider_locations_inner'
          maxItems: 1
          type: array
      type: object
    Order_items_inner:
      properties:
        id:
          $ref: '#/components/schemas/Item/properties/id'
        quantity:
          $ref: '#/components/schemas/ItemQuantity/properties/selected'
      required:
      - id
      type: object
    Order_add_ons_inner:
      properties:
        id:
          $ref: '#/components/schemas/AddOn/properties/id'
      required:
      - id
      type: object
    Order_offers_inner:
      properties:
        id:
          $ref: '#/components/schemas/Offer/properties/id'
      required:
      - id
      type: object
    Payment_params:
      additionalProperties:
        type: string
      properties:
        transaction_id:
          description: This value will be placed in the the $transaction_id url param
            in case of http/get and in the requestBody http/post requests
          type: string
        transaction_status:
          type: string
        amount:
          $ref: '#/components/schemas/Price/properties/value'
        currency:
          $ref: '#/components/schemas/Price/properties/currency'
      required:
      - currency
      type: object
    Provider_locations_inner:
      allOf:
      - $ref: '#/components/schemas/Location'
      - $ref: '#/components/schemas/Agent_allOf'
    Quotation_breakup_inner:
      properties:
        title:
          type: string
        price:
          $ref: '#/components/schemas/Price'
      type: object
    Scalar_range:
      properties:
        min:
          type: number
        max:
          type: number
      type: object
    Time_range:
      properties:
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
      type: object
  securitySchemes:
    SubscriberAuth:
      description: "Signature of message body using Buyer App or Seller App subscriber's\
        \ signing public key. <br/><br/>Format:<br/><br/><code>Authorization : Signature\
        \ keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\"\
        ,created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires)\
        \ digest\",signature=\"Base64(signing string)\"</code>"
      in: header
      name: Authorization
      type: apiKey
    GatewaySubscriberAuth:
      description: "Signature of message body + BuyerApp/SellerApp's Authorization\
        \ header using Gateway's signing public key. Format:<br/><br/><code>Proxy-Authorization\
        \ : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"\
        ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created)\
        \ (expires) digest\",signature=\"Base64(signing string)\"</code><p><b>Note:</b>This\
        \ header will be deprecated soon and will no longer be supported in future\
        \ releases. New implementors are requested to use the X-Gateway-Authorization\
        \ header. Existing implementations are requested to migrate their header to\
        \ the new header. The deprecation date will be set after discussion as per\
        \ the standard specification governance process.</p>"
      in: header
      name: Proxy-Authorization
      type: apiKey
    GatewaySubscriberAuthNew:
      description: "Signature of message body + BuyerApp/SellerApp's Authorization\
        \ header using Gateway's signing public key. Format:<br/><br/><code>X-Gateway-Authorization\
        \ : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"\
        ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created)\
        \ (expires) digest\",signature=\"Base64(signing string)\"</code>"
      in: header
      name: X-Gateway-Authorization
      type: apiKey

